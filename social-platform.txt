Vogliamo creare uno spazio virtuale in stile social network dove gli utenti possano condividere le proprie esperienze. Ogni utente può creare dei post, al quale può aggiungere uno o più media come foto e video. Ogni post può avere uno o più tags che servono per categorizzare i contenuti. Gli altri utenti possono interagire con il post esprimendo il loro gradimento attraverso un semplice like.


Step 1 (Diagramma ER)
Individuate prima le entità su cui si basa la piattaforma e poi osservate come sono relazionate. Inoltre, specificate i campi e i diversi vincoli disponibili per ciascun campo, come ad esempio l'utilizzo di UNIQUE per garantire l'unicità dei valori e NOT NULL per indicare l’obbligo di fornire un valore per quel campo. Attenzione alle chiavi primarie. Espandere il diagramma per integrare anche l’entità Tags


1.Seleziona gli utenti che hanno postato almeno un video
SELECT*
FROM `users`
INNER JOIN `medias`
ON `users`.`id` = `medias`.`user_id`
WHERE `medias`.type = "video";

"INNER JOIN medias" (collega ogni utente ai media che ha caricato)
WHERE `medias`.type = 'video' (filtra solo i media che sono video)

2.Seleziona tutti i post senza Like (13)
SELECT*
FROM `posts`
LEFT JOIN `likes`
ON `posts`.`id` = `likes`.`post_id`
WHERE `likes`.`post_id` is null;

"LEFT JOIN" (include tutti i post, anche se non hanno corrispondenze nei likes, al contrario di "INNER JOIN" il quale avrebbe preso anche solo i post con i like)
WHERE `likes`.`post_id` IS NULL (filtra solo quelli senza like)
//si è giusto visto che ne conto 13 in toale 


3.Conta il numero di like per ogni post (165 nel caso di query con SELECT + JOIN oppure 175 nel caso di query con sola SELECT)

SELECT post_id, COUNT(*) AS totale_like
FROM `likes`
GROUP BY `post_id`
ORDER BY totale_like DESC;




4.Ordina gli utenti per il numero di media caricati (25) 

SELECT `users`.`id` AS `user_id`, `users`.`username`, COUNT(`medias`.`id`) AS `media_count`
FROM `users`
LEFT JOIN `medias`
ON `users`.`id` = `medias`.`user_id`
GROUP BY `users`.`id`, `users`.`username`
ORDER BY "media_count" DESC;

SELECT u.id AS user_id, u.username, COUNT(m.id) AS media_count, (prende l'id dell'utente (users.id), il suo username, quanti media ha caricato (usando COUNT(medias.id)))
FROM users, stai lavorando sulla tabella users, dandole l’alias u per scrivere meno.
LEFT JOIN medias ON users.id = medias.user_id (Unisci la tabella users con la tabella medias)
Corrispondenza: users.id = medias.user_id
GROUP BY u.id, u.username (Raggruppa i risultati per utente)
ORDER BY media_count DESC ordina i risultati in ordine decrescente, cioè dal numero più alto di media al più basso.





5.Ordina gli utenti per totale di likes ricevuti nei loro posts (25) 

SELECT `users`.`id` AS `user_id`, `users`.`username`, COUNT(`likes`.`post_id`) AS total_likes_received
FROM `users`
JOIN `posts`
ON `users`.`id` = `posts`.`user_id`
LEFT JOIN `likes`
ON `posts`.`id` = `likes`.`post_id`
GROUP BY `users`.`id`, `users`.`username`
ORDER BY "total_likes_received DESC";

COUNT(l.post_id)	Conta quanti like ha ricevuto ogni utente
GROUP BY u.id, u.username	Raggruppa per utente
ORDER BY total_likes_received DESC	Ordina dal più al meno "piaciuto"